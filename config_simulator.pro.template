;-------------------------------------------------------------------
; ** PURPOSE: configure cloud-cci simulator run
;
; ** OUT:io_paths, time_frame, cot_thresholds, histinfo
;-------------------------------------------------------------------

PRO CONFIG_SIMULATOR, io_paths, time_frame, cot_thresholds, histinfo

    ;-- model = 0.01, e.g. ERA = original input data
    cot_thv_era = 0.01 
    ;-- satellite sensitivity threshold
    cot_thv_sat = 5.0
    ;-- crit_str
    crit_str = 'cot_thv_'+STRTRIM(STRING(cot_thv_sat, FORMAT='(F4.2)'),2)

    ;-- era simulator output directory
    out_base = 'v3_further_devs/v3.8_add_2dhistogram/'
    pwd_base = '/data/cschlund/output/simplified_simulator/'
    out_path = pwd_base + out_base
    validres = VALID_DIR( out_path )
    IF(validres EQ 0) THEN creatres = CREATE_DIR( out_path )

    ;-- ERA-Interim input files
;     era_base = '/cmsaf/cmsaf-cld1/mstengel/ERA_Interim/ERA_simulator/'
    era_base = '/data/cschlund/'
    era_path = era_base  + 'MARS_data/ERA_simulator/'

    ;-- path for figs
    fig_path = '/data/cschlund/figs/'

    ;-- Set list of years to be processed
    ;years_list = ['1979','1980',$
    ;    '1981','1982','1983','1984','1985','1986','1987','1988','1989','1990',$
    ;    '1991','1992','1993','1994','1995','1996','1997','1998','1999','2000',$
    ;    '2001','2002','2003','2004','2005','2006','2007','2008','2009','2010',$
    ;    '2011','2012','2013','2014']
    years_list = ['2008']
    nyears = N_ELEMENTS(years_list)

    ;-- Set list of month to be processed
    ;months_list = ['01','02','03','04','05','06','07','08','09','10','11','12']
    months_list = ['07']
    nmonths = N_ELEMENTS(months_list)


    ;-- Set cloud top pressure limits for 1D and 2D output, same as in Cloud_cci
    phase = [0, 1] ; liquid, ice
    phase_dim = FIX(N_ELEMENTS(phase))

    ; -- hist1d_ctp [hPa] --
    ctp1d = [1., 90., 180., 245., 310., 375., 440., 500., 560., $
             620., 680., 740., 800., 875., 950., 1100.]
    ctp2d = FLTARR(2,N_ELEMENTS(ctp1d)-1)

    FOR gu=0,N_ELEMENTS(ctp2d[0,*])-1 DO BEGIN
      ctp2d[0,gu] = ctp1d[gu]
      ctp2d[1,gu] = ctp1d[gu+1]
    ENDFOR

    ctp_bins = ctp1d[1:N_ELEMENTS(ctp1d)-1] * 0.5 + $ 
               ctp1d[0:N_ELEMENTS(ctp1d)-2] * 0.5

    ctp1d_dim = FIX(N_ELEMENTS(ctp1d))
    ctp_bin1d_dim = FIX(N_ELEMENTS(ctp_bins)) 

    ; -- hist1d_cot [] --
    cot1d = [0., 0.3, 0.6, 1.3, 2.2, 3.6, 5.8, 9.4, $
             15., 23., 41., 60., 80., 100.]
    cot2d = FLTARR(2,N_ELEMENTS(cot1d)-1)

    FOR gu=0,N_ELEMENTS(cot2d[0,*])-1 DO BEGIN
      cot2d[0,gu] = cot1d[gu]
      cot2d[1,gu] = cot1d[gu+1]
    ENDFOR 
    cot_bins = cot1d[1:N_ELEMENTS(cot1d)-1] * 0.5 + $ 
               cot1d[0:N_ELEMENTS(cot1d)-2] * 0.5

    cot1d_dim = FIX(N_ELEMENTS(cot1d))
    cot_bin1d_dim = FIX(N_ELEMENTS(cot_bins)) 


    ; -- hist1d_ctt [K] --
    ctt1d = [200., 210., 220., 230., 235., 240., 245., $
             250., 255., 260., 265., 270., 280., $
             290., 300., 310., 350.]
    ctt2d = FLTARR(2,N_ELEMENTS(ctt1d)-1)

    FOR gu=0,N_ELEMENTS(ctt2d[0,*])-1 DO BEGIN
      ctt2d[0,gu] = ctt1d[gu]
      ctt2d[1,gu] = ctt1d[gu+1]
    ENDFOR 
    ctt_bins = ctt1d[1:N_ELEMENTS(ctt1d)-1] * 0.5 + $ 
               ctt1d[0:N_ELEMENTS(ctt1d)-2] * 0.5

    ctt1d_dim = FIX(N_ELEMENTS(ctt1d))
    ctt_bin1d_dim = FIX(N_ELEMENTS(ctt_bins)) 


    ; -- hist1d_cwp [g/m2] --
    cwp1d = [0., 5., 10., 20., 35., 50., 75., 100., $
             150., 200., 300., 500., 1000., 2000., 100000.]
    cwp2d = FLTARR(2,N_ELEMENTS(cwp1d)-1)

    FOR gu=0,N_ELEMENTS(cwp2d[0,*])-1 DO BEGIN
      cwp2d[0,gu] = cwp1d[gu]
      cwp2d[1,gu] = cwp1d[gu+1]
    ENDFOR 
    cwp_bins = cwp1d[1:N_ELEMENTS(cwp1d)-1] * 0.5 + $ 
               cwp1d[0:N_ELEMENTS(cwp1d)-2] * 0.5

    cwp1d_dim = FIX(N_ELEMENTS(cwp1d))
    cwp_bin1d_dim = FIX(N_ELEMENTS(cwp_bins)) 


    ;-- create output structures
    io_paths = {io_paths, $
                inp:era_path, $
                out:out_path, $
                fig:fig_path}

    time_frame = {time_frame, $
                  yyyy:years_list, $
                  mm:months_list, $
                  ny:nyears, $
                  nm:nmonths}

    cot_thresholds = {cot_thresholds, $
                      era:cot_thv_era, $
                      sat:cot_thv_sat, $
                      str:crit_str}

    histinfo = { histograms, $ 
                 phase:phase, $
                 phase_dim:phase_dim, $
                 ctp2d:ctp2d, $
                 ctp1d:ctp1d, $
                 ctp1d_dim:ctp1d_dim, $
                 ctp_bin1d:ctp_bins, $
                 ctp_bin1d_dim:ctp_bin1d_dim, $
                 cot2d:cot2d, $
                 cot1d:cot1d, $
                 cot1d_dim:cot1d_dim, $
                 cot_bin1d:cot_bins, $
                 cot_bin1d_dim:cot_bin1d_dim, $
                 ctt2d:ctt2d, $
                 ctt1d:ctt1d, $
                 ctt1d_dim:ctt1d_dim, $
                 ctt_bin1d:ctt_bins, $
                 ctt_bin1d_dim:ctt_bin1d_dim, $
                 cwp2d:cwp2d, $
                 cwp1d:cwp1d, $
                 cwp1d_dim:cwp1d_dim, $
                 cwp_bin1d:cwp_bins, $
                 cwp_bin1d_dim:cwp_bin1d_dim }

END
