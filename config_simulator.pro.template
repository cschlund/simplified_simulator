;------------------------------------------------------------------------------
; ** PURPOSE: configure cloud-cci simulator run
; Original ERA-Interim files located here:
; /cmsaf/cmsaf-cld1/mstengel/ERA_Interim/ERA_simulator/MARS_data/ERA_simulator/
;------------------------------------------------------------------------------
PRO CONFIG_SIMULATOR, PATHS=io_paths, TIMES=time_frame, $
                      THRESHOLDS=cot_thresholds, $
                      HIST_INFO=histinfo, CER_INFO=const_reffs, $
                      SYEAR=y1, EYEAR=y2, SMONTH=m1, EMONTH=m2, $
                      TEST=test
;------------------------------------------------------------------------------

    ; ========================================================
    ; === MODIFY paths and numbers below  ===
    ; ========================================================

    run = 'v4/v4.3_add_ctt_ctp_cwp_inter_1Dhistos/'

    ; devmode = ON = 1, will add 'devmode' string to output files
    ;devmode = 0
    devmode = 1

    ; cloud optical thickness thresholds required in search4cloud.pro
    min_thv = 0.01 ; high sensitivity w.r.t. very thin clouds
    max_thv = 0.3  ; lower sensitivity w.r.t. very thin clouds

    IF KEYWORD_SET(test) THEN $
        iw = 'TESTDATA_era_simulator/' ELSE iw = 'INPUT_era_simulator/'

    ; simulator git repository
    rep_pwd='/home/cschlund/Programme/idl/simplified_simulator/'
    ; simulator input
    inp_pwd='/cmsaf/cmsaf-cld7/cschlund/input/simulator/'+iw
    ; simulator output
    out_pwd='/cmsaf/cmsaf-cld7/cschlund/output/simulator/'+run
    ; simulator figures
    fig_pwd='/cmsaf/cmsaf-cld7/cschlund/figures/simulator/'+run

    ; ========================================================
    ; === DO NOT CHANGE UNLESS YOU KNOW WHAT YOU ARE DOING ===
    ; ========================================================

    IF KEYWORD_SET(y1) AND ~KEYWORD_SET(y2) THEN y2 = y1
    IF KEYWORD_SET(m1) AND ~KEYWORD_SET(m2) THEN m2 = m1
    IF ~KEYWORD_SET(y1) THEN y1 = 2008;1979
    IF ~KEYWORD_SET(y2) THEN y2 = 2008;2014
    IF ~KEYWORD_SET(m1) THEN m1 = 7;1
    IF ~KEYWORD_SET(m2) THEN m2 = 7;12

    ; Set list of years to be processed
    years_list = STRTRIM( STRING( INDGEN( y2 - y1 + 1 ) + y1 ), 2 )
    nyears = N_ELEMENTS(years_list)

    ; Set list of month to be processed
    marr = INDGEN( m2 - m1 + 1 ) + m1 
    months_list = STRTRIM( STRING( marr, FORMAT='(I02)' ), 2 )
    nmonths = N_ELEMENTS(months_list)


    ; create simulator output path if not existing
    validres = VALID_DIR( out_pwd )
    IF(validres EQ 0) THEN creatres = CREATE_DIR( out_pwd )

    ; create figure output path if not existing
    validres = VALID_DIR( fig_pwd )
    IF(validres EQ 0) THEN creatres = CREATE_DIR( fig_pwd )

    ; read sea surface temperature from ERA
    sstfile = rep_pwd + '/aux/sst_era_interim_0.5_0.5.nc'

    IF (devmode EQ 1) THEN devstr='devmode_' ELSE devstr=''

    ; create THV strings
    cadd_min = STRTRIM(STRING(min_thv, FORMAT='(F4.2)'),2)
    cadd_max = STRTRIM(STRING(max_thv, FORMAT='(F4.2)'),2)
    crit_string_min = devstr + 'cot_thv_' + cadd_min
    crit_string_max = devstr + 'cot_thv_' + cadd_max


    ; === Cloud_cci like settings

    ; -- constant water droplet and ice crystal effective radius
    reff_water = 12. ;12 microns a priori in CC4CL
    reff_ice   = 30. ;30 microns a priori in CC4CL


    ;-- Set cloud top pressure limits for 1D and 2D output
    phase = [0, 1] ; liquid, ice
    phase_dim = FIX(N_ELEMENTS(phase))


    ; -- hist1d_ctp [hPa] --
    ctp1d = [1., 90., 180., 245., 310., 375., 440., 500., 560., $
             620., 680., 740., 800., 875., 950., 1100.]
    ctp2d = FLTARR(2,N_ELEMENTS(ctp1d)-1)

    FOR gu=0,N_ELEMENTS(ctp2d[0,*])-1 DO BEGIN
      ctp2d[0,gu] = ctp1d[gu]
      ctp2d[1,gu] = ctp1d[gu+1]
    ENDFOR

    ctp_bins = ctp1d[1:N_ELEMENTS(ctp1d)-1] * 0.5 + $ 
               ctp1d[0:N_ELEMENTS(ctp1d)-2] * 0.5

    ctp1d_dim = FIX(N_ELEMENTS(ctp1d))
    ctp_bin1d_dim = FIX(N_ELEMENTS(ctp_bins)) 


    ; -- hist1d_cot [] --
    cot1d = [0., 0.3, 0.6, 1.3, 2.2, 3.6, 5.8, 9.4, $
             15., 23., 41., 60., 80., 100.]
    cot2d = FLTARR(2,N_ELEMENTS(cot1d)-1)

    FOR gu=0,N_ELEMENTS(cot2d[0,*])-1 DO BEGIN
      cot2d[0,gu] = cot1d[gu]
      cot2d[1,gu] = cot1d[gu+1]
    ENDFOR 
    cot_bins = cot1d[1:N_ELEMENTS(cot1d)-1] * 0.5 + $ 
               cot1d[0:N_ELEMENTS(cot1d)-2] * 0.5

    cot1d_dim = FIX(N_ELEMENTS(cot1d))
    cot_bin1d_dim = FIX(N_ELEMENTS(cot_bins)) 


    ; -- hist1d_ctt [K] --
    ctt1d = [200., 210., 220., 230., 235., 240., 245., $
             250., 255., 260., 265., 270., 280., $
             290., 300., 310., 350.]
    ctt2d = FLTARR(2,N_ELEMENTS(ctt1d)-1)

    FOR gu=0,N_ELEMENTS(ctt2d[0,*])-1 DO BEGIN
      ctt2d[0,gu] = ctt1d[gu]
      ctt2d[1,gu] = ctt1d[gu+1]
    ENDFOR 
    ctt_bins = ctt1d[1:N_ELEMENTS(ctt1d)-1] * 0.5 + $ 
               ctt1d[0:N_ELEMENTS(ctt1d)-2] * 0.5

    ctt1d_dim = FIX(N_ELEMENTS(ctt1d))
    ctt_bin1d_dim = FIX(N_ELEMENTS(ctt_bins)) 


    ; -- hist1d_cwp [g/m2] --
    cwp1d = [0., 5., 10., 20., 35., 50., 75., 100., $
             150., 200., 300., 500., 1000., 2000., 100000.]
    cwp2d = FLTARR(2,N_ELEMENTS(cwp1d)-1)

    FOR gu=0,N_ELEMENTS(cwp2d[0,*])-1 DO BEGIN
      cwp2d[0,gu] = cwp1d[gu]
      cwp2d[1,gu] = cwp1d[gu+1]
    ENDFOR 
    cwp_bins = cwp1d[1:N_ELEMENTS(cwp1d)-1] * 0.5 + $ 
               cwp1d[0:N_ELEMENTS(cwp1d)-2] * 0.5

    cwp1d_dim = FIX(N_ELEMENTS(cwp1d))
    cwp_bin1d_dim = FIX(N_ELEMENTS(cwp_bins)) 


    ; -- hist1d_cer [microns] --
    cer1d = [0., 3., 6., 9., 12., 15., 20., 25., 30., 40., 60., 80.]
    cer2d = FLTARR(2,N_ELEMENTS(cer1d)-1)

    FOR gu=0,N_ELEMENTS(cer2d[0,*])-1 DO BEGIN
      cer2d[0,gu] = cer1d[gu]
      cer2d[1,gu] = cer1d[gu+1]
    ENDFOR 
    cer_bins = cer1d[1:N_ELEMENTS(cer1d)-1] * 0.5 + $ 
               cer1d[0:N_ELEMENTS(cer1d)-2] * 0.5

    cer1d_dim = FIX(N_ELEMENTS(cer1d))
    cer_bin1d_dim = FIX(N_ELEMENTS(cer_bins)) 


    ;-- create output structures

    io_paths = {io_paths, $
                inp:inp_pwd, out:out_pwd, fig:fig_pwd, sst:sstfile }

    time_frame = {time_frame, $
                  years:years_list, months:months_list, $
                  ny:nyears, nm:nmonths}

    cot_thresholds = {cot_thresholds, $
                      min:min_thv, min_str:crit_string_min, $
                      max:max_thv, max_str:crit_string_max}

    const_reffs = {effective_radii_microns, $
                   water:reff_water, ice:reff_ice}

    histinfo = { histograms, $ 
                 phase:phase, phase_dim:phase_dim, $
                 ctp2d:ctp2d, ctp1d:ctp1d, $
                 ctp1d_dim:ctp1d_dim, ctp_bin1d:ctp_bins, $
                 ctp_bin1d_dim:ctp_bin1d_dim, $
                 cot2d:cot2d, cot1d:cot1d, $
                 cot1d_dim:cot1d_dim, cot_bin1d:cot_bins, $
                 cot_bin1d_dim:cot_bin1d_dim, $
                 ctt2d:ctt2d, ctt1d:ctt1d, $
                 ctt1d_dim:ctt1d_dim, ctt_bin1d:ctt_bins, $
                 ctt_bin1d_dim:ctt_bin1d_dim, $
                 cwp2d:cwp2d, cwp1d:cwp1d, $
                 cwp1d_dim:cwp1d_dim, cwp_bin1d:cwp_bins, $
                 cwp_bin1d_dim:cwp_bin1d_dim , $
                 cer2d:cer2d, cer1d:cer1d, $
                 cer1d_dim:cer1d_dim, cer_bin1d:cer_bins, $
                 cer_bin1d_dim:cer_bin1d_dim }

END
